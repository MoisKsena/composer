!function(t){var r={};function a(n){if(r[n])return r[n].exports;var e=r[n]={i:n,l:!1,exports:{}};return t[n].call(e.exports,e,e.exports,a),e.l=!0,e.exports}a.m=t,a.c=r,a.d=function(n,e,t){a.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},a.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},a.t=function(e,n){if(1&n&&(e=a(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(a.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)a.d(t,r,function(n){return e[n]}.bind(null,r));return t},a.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return a.d(e,"a",e),e},a.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},a.p="",a(a.s="./src/js/script.js")}({"./src/js/script.js":function(module,exports){eval("//import Swiper from '../../node_modules/swiper/dist/js/swiper.min.js';\nvar swiper = new Swiper('.swiper-container', {\n  slidesPerView: 3,\n  spaceBetween: 130,\n  freeMode: true,\n  loop: true,\n  pagination: {\n    el: '.swiper-pagination',\n    clickable: true\n  },\n  autoplay: {\n    delay: 2500,\n    disableOnInteraction: false\n  }\n}); //Скрыть/показать элемент по клику \n\n$(document).ready(function () {\n  $('.projects__demo').on('click', '.projects__demo-click', function () {\n    $(this).toggleClass('red').siblings('.projects__demo-slide').slideToggle(0);\n  });\n}); //mp3 treck\n\n(function ($) {\n  $(document).ready(function () {\n    // обработчик нажатия на кнопку плей\n    $('.music__player button').click(function () {\n      var parent = $(this).parent();\n      var button = $(this);\n      var audio = $('audio', parent)[0];\n      var duration = $('.music__player--duration', parent); // переключение состояния плеера и смена картинки на кнопке - плей или пауза //'url(/images/play.png)'   'url(/images/pause.png)' \n\n      if (audio.paused == false) {\n        audio.pause();\n        button.css('background-image', 'url(img/play-button.svg)');\n        button.css('background-size', 'cover');\n      } else {\n        audio.play();\n        button.css('background-image', 'url(img/pause-button.svg)');\n        button.css('background-size', 'cover');\n      }\n    }); // по окончанию трека на кнопку устанавливается картинка плей\n\n    $('.music__player audio').on('ended', function () {\n      var player = $(this).parent();\n      var button = $('button', player);\n      button.css('background-image', 'url(img/play-button.svg)');\n    }); // обновление текущей позиции воспроизведения\n\n    $('.music__player audio').on('timeupdate', function () {\n      var audio = this;\n      var player = $(this).parent();\n      var duration = $('.music__player--duration', player);\n      var date = new Date(audio.currentTime * 1000);\n      duration.html(date.getMinutes() + ':' + date.getSeconds());\n      var progress = $('.progressbar', player);\n\n      if (progress && !progress.attr('data-sliding')) {\n        $(progress).slider(\"value\", audio.currentTime / audio.duration * 100);\n      }\n    }); // ползунок\n\n    $('.music__player .progressbar').slider({\n      value: 0,\n      stop: function stop(event, ui) {\n        var parent = $(this).parent();\n        var audio = $('audio', parent)[0];\n        audio.currentTime = ui.value * audio.duration / 100;\n        $(this).attr('data-sliding', null);\n      },\n      start: function start(event, ui) {\n        $(this).attr('data-sliding', 'true');\n      }\n    });\n  });\n})(jQuery);\n\n//# sourceURL=webpack:///./src/js/script.js?")}});